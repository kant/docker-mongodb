cluster:
  name: ${CLUSTER_NAME}
  search_path:
    - ../docker-mongodb/cloud-compose/templates
    - ../docker-mongodb
  logging:
    driver: awslogs 
    meta:
      group: /cloud-compose/${CLUSTER_NAME}
  secrets:
    MONGODB_ADMIN_PASSWORD: "${KMS_ENCRYPTED_PASSWORD}"
  aws:
    ami: ${IMAGE_ID} or ${IMAGE_NAME_TAG}
    username: ${IMAGE_USERNAME}
    security_groups: ${SECURITY_GROUP_ID}
    ebs_optimized: false
    instance_type: t2.medium
    keypair: drydock
    instance_policy: '{ "Statement": [ { "Action": [ "ec2:CreateSnapshot", "ec2:CreateTags", "ec2:DeleteSnapshot", "ec2:DescribeInstances", "ec2:DescribeSnapshotAttribute", "ec2:DescribeSnapshots", "ec2:DescribeVolumeAttribute", "ec2:DescribeVolumeStatus", "ec2:DescribeVolumes", "ec2:ModifySnapshotAttribute", "ec2:ResetSnapshotAttribute", "logs:CreateLogStream", "logs:PutLogEvents" ], "Effect": "Allow", "Resource": [ "*" ] }, { "Action": ["kms:Decrypt"], "Effect": "Allow", "Resource": ["${KMS_KEY_ARN}"] } ] }'
    volumes:
      - name: root
        size: 30G
      - name: docker
        size: 20G
        block: /dev/xvdz
        file_system: lvm2
        meta:
          group: docker
          volumes:
            - name: data 
              size: 19G
            - name: metadata
              size: 900M 
      - name: data
        size: 10G
        block: /dev/xvdc
        file_system: ext4
        meta:
          format: true
          mount: /data/mongodb
    tags:
      datadog: monitored
    nodes:
      - id: 0
        ip: ${CLUSTER_NODE_0_IP}
        subnet: ${CLUSTER_NODE_0_SUBNET}
      - id: 1
        ip: ${CLUSTER_NODE_1_IP}
        subnet: ${CLUSTER_NODE_1_SUBNET}
      - id: 2
        ip: ${CLUSTER_NODE_2_IP}
        subnet: ${CLUSTER_NODE_2_SUBNET}
datadog:
  name: ${CLUSTER_NAME}
  notify: 
    - '@slack-${TEAM}'
    - '@opsgenie-${TEAM}'
  use_cluster_prefix: true
  options:
    notify_no_data: true
    no_data_timeframe: 480
  monitors:
    -
      tag: mongodb-replication-lag
      message: "The mongodb replication is failing behind." 
      name: "MongoDB Replication Lag"
      query: 'max(last_1h):avg:mongodb.replset.replicationlag{clustername:%(name)s} by {host} < -10'
    -
      tag: mongodb-replset-status
      message: "The mongodb replication is failing behind." 
      name: "MongoDB Replica Set Heath"
      query: 'max(last_1h):avg:mongodb.replset.health{clustername:%(name)s} < 1'
    -
      tag: mongodb-host-status
      message: "The mongodb replication status on {{host.name}} indicates an error condition. See https://docs.mongodb.org/manual/reference/replica-states/ for details." 
      name: "MongoDB Host Status"
      query: 'max(last_1h):avg:mongodb.replset.state{clustername:%(name)s} by {host} > 2'
    -
      tag: mongodb-backups-missing
      message: "Some mongodb backups are missing in the last hour. Check to see why the mongodb-backups container is not working on node-0 of the cluster." 
      name: "MongoDB Missing Backups"
      query: 'min(last_2h):min:mongodb.backups.missing{clustername:%(name)s} > 0'
    - 
      tag: high-cpu-load
      message: 'The CPU load is too high on server {{host.name}}.'
      name: 'High CPU Load'
      query: 'avg(last_4h):avg:system.cpu.idle{clustername:%(name)s} by {host} < 25'
    -
      tag: low-root-disk-space
      message: 'Running out of root disk space on server {{host.name}}'
      name: 'Low Root Disk Space'
      query: 'avg(last_1h):avg:system.disk.free{clustername:%(name)s,device:/dev/xvda1} by {host} < 10000000000'
    -
      tag: low-data-disk-space
      message: 'Running out of data disk space on server {{host.name}}'
      name: 'Low /data Disk Space'
      query: 'avg(last_1h):avg:system.disk.free{clustername:%(name)s,device:/dev/xvdc} by {host} < 10000000000'    
    -
      tag: low-docker-data
      message: 'Running low on LVM volume space for Docker data on server {{host.name}}.'
      name: 'Low Docker Data Volume'
      query: 'avg(last_1h):avg:docker.info.data_space_free{clustername:%(name)s} by {host} < 1000000000'
    -
      tag: low-docker-metadata
      message: 'Running low on LVM volume space for Docker metadata on server {{host.name}}.'
      name: 'Low Docker Metadata'
      query: 'avg(last_1h):avg:docker.info.metadata_space_free{clustername:%(name)s} by {host} < 100000000'
    -
      tag: low-usable-memory
      message: 'The usable memory is too low on server {{host.name}}.'
      name: 'Low Usable Memory'
      query: 'avg(last_15m):avg:system.mem.pct_usable{clustername:%(name)s} by {host} < 0.1'
